apiVersion: v1
data:
  dashboard.html: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Trailer Dashboard</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\" />\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"></script>\n    <script>\n        async function fetchTrailerEvents() {\n            try {\n                let response = await fetch(\"/trailer-events\");\n                let data = await response.json();\n                let tableBody = document.getElementById(\"events-table\");\n                tableBody.innerHTML = \"\"; \n\n                data.forEach(event => {\n                    let row = `\n                        <tr>\n                            <td>${event.truck_id}</td>\n                            <td>${event.status}</td>\n                            <td>${event.location}</td>\n                            <td>${event.event}</td>\n                            <td>${event.last_updated}</td>\n                        </tr>\n                    `;\n                    tableBody.innerHTML += row;\n                });\n            } catch (error) {\n                console.error(\"Error fetching trailer events:\", error);\n            }\n        }\n\n        setInterval(fetchTrailerEvents, 5000);  // Refresh data every 5 seconds\n        window.onload = fetchTrailerEvents;  // Load data on page load\n    </script>\n</head>\n<body>\n    <h1>Trailer Dashboard</h1>\n    <table class=\"table table-striped\">\n        <thead class=\"table-dark\">\n            <tr>\n                <th>Truck ID</th>\n                <th>Status</th>\n                <th>Location</th>\n                <th>Event</th>\n                <th>Last Updated</th>\n            </tr>\n        </thead>\n        <tbody id=\"events-table\">\n            <!-- Data will be inserted here dynamically -->\n        </tbody>\n    </table>\n    <!-- <iframe\n        src=\"{{ kibana_url }}\"\n        width=\"100%\"\n        height=\"800px\"\n        frameborder=\"0\"\n        title=\"Kibana Dashboard\"\n    ></iframe> -->\n    <h2>Live Trailer Feed</h2>\n    <div id=\"map\" style=\"height: 500px;\"></div>\n\n    <script>\n        // Initialize map centered on a starting location (HQ or random city)\n        var map = L.map(\"map\").setView([37.7749, -122.4194], 10); // Default: San Francisco\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\n\n        // Truck data (simulate different trucks)\n        var trucks = [\n            { id: 1, name: \"Trailer-1\", lat: 37.7749, lon: -122.4194 },\n            { id: 2, name: \"Trailer-2\", lat: 37.7849, lon: -122.4094 },\n            { id: 3, name: \"Trailer-3\", lat: 37.7649, lon: -122.4294 }\n        ];\n\n        var markers = {}; // Store marker references\n\n        function updateTruckPositions() {\n            trucks.forEach(truck => {\n                // Simulate random movement\n                truck.lat += (Math.random() - 0.5) * 0.01;\n                truck.lon += (Math.random() - 0.5) * 0.01;\n\n                if (!markers[truck.id]) {\n                    // Create marker if it doesn't exist\n                    markers[truck.id] = L.marker([truck.lat, truck.lon]).addTo(map)\n                        .bindPopup(`${truck.name}`);\n                } else {\n                    // Update marker position\n                    markers[truck.id].setLatLng([truck.lat, truck.lon])\n                        .bindPopup(`${truck.name} - Moving`);\n                }\n            });\n        }\n\n        // Initial placement\n        updateTruckPositions();\n\n        // Update truck locations every 3 seconds\n        setInterval(updateTruckPositions, 3000);\n    </script>\n</body>\n</html>\n"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: trailer
  name: trailer-cm1
